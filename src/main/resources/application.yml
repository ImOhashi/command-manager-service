### SERVER
server:
  port: ${server.port:7070}

### LOGGER
logging:
  level:
    root: INFO
    com:
      example: TRACE

### SPRING
spring:
  application:
    name: "Command Manager Service"
  output:
    ansi:
      enabled: ALWAYS
  jackson:
    property-naming-strategy: SNAKE_CASE
  kafka:
    config:
      topic:
        partitions: ${kafka.topic.default.partitions:3}
        replicas: ${kafka.topic.default.replicas:3}
        partitions-dlq: ${kafka.topic.default.partitions:3}
        replicas-dlq: ${kafka.topic.default.replicas:3}
      bootstrapServers: ${kafka.servers}
      producer:
        acks: all
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        retries: 10

### ACTUATOR
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info

### INFO ENDPOINT CONFIG
info:
  application:
    name: ${spring.application.name}
    description: Command manager service interface
    version: '@project.version@'
    spring-cloud-version: '@spring-cloud.version@'
    spring-boot-version: '@project.parent.version@'

### SWAGGER
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /docs
    operationsSorter: method

### APPLICATION
app:
  producer:
    kafka:
      shell-command-topic-name: ${shell.command.queue.name}
